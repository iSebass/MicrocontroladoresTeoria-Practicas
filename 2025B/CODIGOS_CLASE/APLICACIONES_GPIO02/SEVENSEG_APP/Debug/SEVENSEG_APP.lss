
SEVENSEG_APP.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000000a  00800100  0000014c  000001e0  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         0000014c  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000002  0080010a  0080010a  000001ea  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  000001ea  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  0000021c  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000020  00000000  00000000  0000025c  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   0000086e  00000000  00000000  0000027c  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000007a2  00000000  00000000  00000aea  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   0000026c  00000000  00000000  0000128c  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000024  00000000  00000000  000014f8  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000418  00000000  00000000  0000151c  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000010  00000000  00000000  00001934  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	45 c0       	rjmp	.+138    	; 0x8c <__ctors_end>
   2:	00 00       	nop
   4:	60 c0       	rjmp	.+192    	; 0xc6 <__bad_interrupt>
   6:	00 00       	nop
   8:	5e c0       	rjmp	.+188    	; 0xc6 <__bad_interrupt>
   a:	00 00       	nop
   c:	5c c0       	rjmp	.+184    	; 0xc6 <__bad_interrupt>
   e:	00 00       	nop
  10:	5a c0       	rjmp	.+180    	; 0xc6 <__bad_interrupt>
  12:	00 00       	nop
  14:	58 c0       	rjmp	.+176    	; 0xc6 <__bad_interrupt>
  16:	00 00       	nop
  18:	56 c0       	rjmp	.+172    	; 0xc6 <__bad_interrupt>
  1a:	00 00       	nop
  1c:	54 c0       	rjmp	.+168    	; 0xc6 <__bad_interrupt>
  1e:	00 00       	nop
  20:	52 c0       	rjmp	.+164    	; 0xc6 <__bad_interrupt>
  22:	00 00       	nop
  24:	50 c0       	rjmp	.+160    	; 0xc6 <__bad_interrupt>
  26:	00 00       	nop
  28:	4e c0       	rjmp	.+156    	; 0xc6 <__bad_interrupt>
  2a:	00 00       	nop
  2c:	4c c0       	rjmp	.+152    	; 0xc6 <__bad_interrupt>
  2e:	00 00       	nop
  30:	4a c0       	rjmp	.+148    	; 0xc6 <__bad_interrupt>
  32:	00 00       	nop
  34:	48 c0       	rjmp	.+144    	; 0xc6 <__bad_interrupt>
  36:	00 00       	nop
  38:	46 c0       	rjmp	.+140    	; 0xc6 <__bad_interrupt>
  3a:	00 00       	nop
  3c:	44 c0       	rjmp	.+136    	; 0xc6 <__bad_interrupt>
  3e:	00 00       	nop
  40:	42 c0       	rjmp	.+132    	; 0xc6 <__bad_interrupt>
  42:	00 00       	nop
  44:	40 c0       	rjmp	.+128    	; 0xc6 <__bad_interrupt>
  46:	00 00       	nop
  48:	3e c0       	rjmp	.+124    	; 0xc6 <__bad_interrupt>
  4a:	00 00       	nop
  4c:	3c c0       	rjmp	.+120    	; 0xc6 <__bad_interrupt>
  4e:	00 00       	nop
  50:	3a c0       	rjmp	.+116    	; 0xc6 <__bad_interrupt>
  52:	00 00       	nop
  54:	38 c0       	rjmp	.+112    	; 0xc6 <__bad_interrupt>
  56:	00 00       	nop
  58:	36 c0       	rjmp	.+108    	; 0xc6 <__bad_interrupt>
  5a:	00 00       	nop
  5c:	34 c0       	rjmp	.+104    	; 0xc6 <__bad_interrupt>
  5e:	00 00       	nop
  60:	32 c0       	rjmp	.+100    	; 0xc6 <__bad_interrupt>
  62:	00 00       	nop
  64:	30 c0       	rjmp	.+96     	; 0xc6 <__bad_interrupt>
  66:	00 00       	nop
  68:	2e c0       	rjmp	.+92     	; 0xc6 <__bad_interrupt>
  6a:	00 00       	nop
  6c:	2c c0       	rjmp	.+88     	; 0xc6 <__bad_interrupt>
  6e:	00 00       	nop
  70:	2a c0       	rjmp	.+84     	; 0xc6 <__bad_interrupt>
  72:	00 00       	nop
  74:	28 c0       	rjmp	.+80     	; 0xc6 <__bad_interrupt>
  76:	00 00       	nop
  78:	26 c0       	rjmp	.+76     	; 0xc6 <__bad_interrupt>
  7a:	00 00       	nop
  7c:	24 c0       	rjmp	.+72     	; 0xc6 <__bad_interrupt>
  7e:	00 00       	nop
  80:	22 c0       	rjmp	.+68     	; 0xc6 <__bad_interrupt>
  82:	00 00       	nop
  84:	20 c0       	rjmp	.+64     	; 0xc6 <__bad_interrupt>
  86:	00 00       	nop
  88:	1e c0       	rjmp	.+60     	; 0xc6 <__bad_interrupt>
	...

0000008c <__ctors_end>:
  8c:	11 24       	eor	r1, r1
  8e:	1f be       	out	0x3f, r1	; 63
  90:	cf ef       	ldi	r28, 0xFF	; 255
  92:	d0 e4       	ldi	r29, 0x40	; 64
  94:	de bf       	out	0x3e, r29	; 62
  96:	cd bf       	out	0x3d, r28	; 61

00000098 <__do_copy_data>:
  98:	11 e0       	ldi	r17, 0x01	; 1
  9a:	a0 e0       	ldi	r26, 0x00	; 0
  9c:	b1 e0       	ldi	r27, 0x01	; 1
  9e:	ec e4       	ldi	r30, 0x4C	; 76
  a0:	f1 e0       	ldi	r31, 0x01	; 1
  a2:	00 e0       	ldi	r16, 0x00	; 0
  a4:	0b bf       	out	0x3b, r16	; 59
  a6:	02 c0       	rjmp	.+4      	; 0xac <__do_copy_data+0x14>
  a8:	07 90       	elpm	r0, Z+
  aa:	0d 92       	st	X+, r0
  ac:	aa 30       	cpi	r26, 0x0A	; 10
  ae:	b1 07       	cpc	r27, r17
  b0:	d9 f7       	brne	.-10     	; 0xa8 <__do_copy_data+0x10>

000000b2 <__do_clear_bss>:
  b2:	21 e0       	ldi	r18, 0x01	; 1
  b4:	aa e0       	ldi	r26, 0x0A	; 10
  b6:	b1 e0       	ldi	r27, 0x01	; 1
  b8:	01 c0       	rjmp	.+2      	; 0xbc <.do_clear_bss_start>

000000ba <.do_clear_bss_loop>:
  ba:	1d 92       	st	X+, r1

000000bc <.do_clear_bss_start>:
  bc:	ac 30       	cpi	r26, 0x0C	; 12
  be:	b2 07       	cpc	r27, r18
  c0:	e1 f7       	brne	.-8      	; 0xba <.do_clear_bss_loop>
  c2:	02 d0       	rcall	.+4      	; 0xc8 <main>
  c4:	41 c0       	rjmp	.+130    	; 0x148 <_exit>

000000c6 <__bad_interrupt>:
  c6:	9c cf       	rjmp	.-200    	; 0x0 <__vectors>

000000c8 <main>:
	
int contador=0;

int main(void)
{
    DDRB = 0xFF;
  c8:	8f ef       	ldi	r24, 0xFF	; 255
  ca:	84 b9       	out	0x04, r24	; 4
	DDRD = (1<<0)|(1<<1);
  cc:	83 e0       	ldi	r24, 0x03	; 3
  ce:	8a b9       	out	0x0a, r24	; 10
	
	DDRA &= ~( (1<<0) | (1<<1) );
  d0:	81 b1       	in	r24, 0x01	; 1
  d2:	8c 7f       	andi	r24, 0xFC	; 252
  d4:	81 b9       	out	0x01, r24	; 1
	
	
    while (1) 
    {
		if( getBtnDown() == 0 ){
  d6:	01 99       	sbic	0x00, 1	; 0
  d8:	0b c0       	rjmp	.+22     	; 0xf0 <main+0x28>
			while( getBtnDown() == 0 );
  da:	01 9b       	sbis	0x00, 1	; 0
  dc:	fe cf       	rjmp	.-4      	; 0xda <main+0x12>
			contador--;
  de:	80 91 0a 01 	lds	r24, 0x010A	; 0x80010a <__data_end>
  e2:	90 91 0b 01 	lds	r25, 0x010B	; 0x80010b <__data_end+0x1>
  e6:	01 97       	sbiw	r24, 0x01	; 1
  e8:	90 93 0b 01 	sts	0x010B, r25	; 0x80010b <__data_end+0x1>
  ec:	80 93 0a 01 	sts	0x010A, r24	; 0x80010a <__data_end>
		}
		if( getBtnUP() == 0 ){
  f0:	00 99       	sbic	0x00, 0	; 0
  f2:	0b c0       	rjmp	.+22     	; 0x10a <main+0x42>
			while( getBtnUP() == 0 );
  f4:	00 9b       	sbis	0x00, 0	; 0
  f6:	fe cf       	rjmp	.-4      	; 0xf4 <main+0x2c>
			contador++;
  f8:	80 91 0a 01 	lds	r24, 0x010A	; 0x80010a <__data_end>
  fc:	90 91 0b 01 	lds	r25, 0x010B	; 0x80010b <__data_end+0x1>
 100:	01 96       	adiw	r24, 0x01	; 1
 102:	90 93 0b 01 	sts	0x010B, r25	; 0x80010b <__data_end+0x1>
 106:	80 93 0a 01 	sts	0x010A, r24	; 0x80010a <__data_end>
		}
		
		PORTB = DecoCC[contador];
 10a:	e0 91 0a 01 	lds	r30, 0x010A	; 0x80010a <__data_end>
 10e:	f0 91 0b 01 	lds	r31, 0x010B	; 0x80010b <__data_end+0x1>
 112:	e0 50       	subi	r30, 0x00	; 0
 114:	ff 4f       	sbci	r31, 0xFF	; 255
 116:	80 81       	ld	r24, Z
 118:	85 b9       	out	0x05, r24	; 5
		
		if( contador > 9 ) contador=0;
 11a:	80 91 0a 01 	lds	r24, 0x010A	; 0x80010a <__data_end>
 11e:	90 91 0b 01 	lds	r25, 0x010B	; 0x80010b <__data_end+0x1>
 122:	0a 97       	sbiw	r24, 0x0a	; 10
 124:	24 f0       	brlt	.+8      	; 0x12e <main+0x66>
 126:	10 92 0b 01 	sts	0x010B, r1	; 0x80010b <__data_end+0x1>
 12a:	10 92 0a 01 	sts	0x010A, r1	; 0x80010a <__data_end>
		if( contador < 0 ) contador = 9;
 12e:	80 91 0a 01 	lds	r24, 0x010A	; 0x80010a <__data_end>
 132:	90 91 0b 01 	lds	r25, 0x010B	; 0x80010b <__data_end+0x1>
 136:	99 23       	and	r25, r25
 138:	74 f6       	brge	.-100    	; 0xd6 <main+0xe>
 13a:	89 e0       	ldi	r24, 0x09	; 9
 13c:	90 e0       	ldi	r25, 0x00	; 0
 13e:	90 93 0b 01 	sts	0x010B, r25	; 0x80010b <__data_end+0x1>
 142:	80 93 0a 01 	sts	0x010A, r24	; 0x80010a <__data_end>
 146:	c7 cf       	rjmp	.-114    	; 0xd6 <main+0xe>

00000148 <_exit>:
 148:	f8 94       	cli

0000014a <__stop_program>:
 14a:	ff cf       	rjmp	.-2      	; 0x14a <__stop_program>
