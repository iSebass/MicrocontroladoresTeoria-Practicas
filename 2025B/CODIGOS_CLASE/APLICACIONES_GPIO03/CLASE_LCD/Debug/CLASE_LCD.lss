
CLASE_LCD.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000028  00800100  0000034e  000003e2  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         0000034e  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000001  00800128  00800128  0000040a  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  0000040a  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  0000043c  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000000d0  00000000  00000000  0000047c  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   0000155e  00000000  00000000  0000054c  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000a4e  00000000  00000000  00001aaa  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000859  00000000  00000000  000024f8  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  0000019c  00000000  00000000  00002d54  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000005ea  00000000  00000000  00002ef0  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000008bc  00000000  00000000  000034da  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000000b0  00000000  00000000  00003d96  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	45 c0       	rjmp	.+138    	; 0x8c <__ctors_end>
   2:	00 00       	nop
   4:	60 c0       	rjmp	.+192    	; 0xc6 <__bad_interrupt>
   6:	00 00       	nop
   8:	5e c0       	rjmp	.+188    	; 0xc6 <__bad_interrupt>
   a:	00 00       	nop
   c:	5c c0       	rjmp	.+184    	; 0xc6 <__bad_interrupt>
   e:	00 00       	nop
  10:	5a c0       	rjmp	.+180    	; 0xc6 <__bad_interrupt>
  12:	00 00       	nop
  14:	58 c0       	rjmp	.+176    	; 0xc6 <__bad_interrupt>
  16:	00 00       	nop
  18:	56 c0       	rjmp	.+172    	; 0xc6 <__bad_interrupt>
  1a:	00 00       	nop
  1c:	54 c0       	rjmp	.+168    	; 0xc6 <__bad_interrupt>
  1e:	00 00       	nop
  20:	52 c0       	rjmp	.+164    	; 0xc6 <__bad_interrupt>
  22:	00 00       	nop
  24:	50 c0       	rjmp	.+160    	; 0xc6 <__bad_interrupt>
  26:	00 00       	nop
  28:	4e c0       	rjmp	.+156    	; 0xc6 <__bad_interrupt>
  2a:	00 00       	nop
  2c:	4c c0       	rjmp	.+152    	; 0xc6 <__bad_interrupt>
  2e:	00 00       	nop
  30:	4a c0       	rjmp	.+148    	; 0xc6 <__bad_interrupt>
  32:	00 00       	nop
  34:	48 c0       	rjmp	.+144    	; 0xc6 <__bad_interrupt>
  36:	00 00       	nop
  38:	46 c0       	rjmp	.+140    	; 0xc6 <__bad_interrupt>
  3a:	00 00       	nop
  3c:	44 c0       	rjmp	.+136    	; 0xc6 <__bad_interrupt>
  3e:	00 00       	nop
  40:	42 c0       	rjmp	.+132    	; 0xc6 <__bad_interrupt>
  42:	00 00       	nop
  44:	40 c0       	rjmp	.+128    	; 0xc6 <__bad_interrupt>
  46:	00 00       	nop
  48:	3e c0       	rjmp	.+124    	; 0xc6 <__bad_interrupt>
  4a:	00 00       	nop
  4c:	3c c0       	rjmp	.+120    	; 0xc6 <__bad_interrupt>
  4e:	00 00       	nop
  50:	3a c0       	rjmp	.+116    	; 0xc6 <__bad_interrupt>
  52:	00 00       	nop
  54:	38 c0       	rjmp	.+112    	; 0xc6 <__bad_interrupt>
  56:	00 00       	nop
  58:	36 c0       	rjmp	.+108    	; 0xc6 <__bad_interrupt>
  5a:	00 00       	nop
  5c:	34 c0       	rjmp	.+104    	; 0xc6 <__bad_interrupt>
  5e:	00 00       	nop
  60:	32 c0       	rjmp	.+100    	; 0xc6 <__bad_interrupt>
  62:	00 00       	nop
  64:	30 c0       	rjmp	.+96     	; 0xc6 <__bad_interrupt>
  66:	00 00       	nop
  68:	2e c0       	rjmp	.+92     	; 0xc6 <__bad_interrupt>
  6a:	00 00       	nop
  6c:	2c c0       	rjmp	.+88     	; 0xc6 <__bad_interrupt>
  6e:	00 00       	nop
  70:	2a c0       	rjmp	.+84     	; 0xc6 <__bad_interrupt>
  72:	00 00       	nop
  74:	28 c0       	rjmp	.+80     	; 0xc6 <__bad_interrupt>
  76:	00 00       	nop
  78:	26 c0       	rjmp	.+76     	; 0xc6 <__bad_interrupt>
  7a:	00 00       	nop
  7c:	24 c0       	rjmp	.+72     	; 0xc6 <__bad_interrupt>
  7e:	00 00       	nop
  80:	22 c0       	rjmp	.+68     	; 0xc6 <__bad_interrupt>
  82:	00 00       	nop
  84:	20 c0       	rjmp	.+64     	; 0xc6 <__bad_interrupt>
  86:	00 00       	nop
  88:	1e c0       	rjmp	.+60     	; 0xc6 <__bad_interrupt>
	...

0000008c <__ctors_end>:
  8c:	11 24       	eor	r1, r1
  8e:	1f be       	out	0x3f, r1	; 63
  90:	cf ef       	ldi	r28, 0xFF	; 255
  92:	d0 e4       	ldi	r29, 0x40	; 64
  94:	de bf       	out	0x3e, r29	; 62
  96:	cd bf       	out	0x3d, r28	; 61

00000098 <__do_copy_data>:
  98:	11 e0       	ldi	r17, 0x01	; 1
  9a:	a0 e0       	ldi	r26, 0x00	; 0
  9c:	b1 e0       	ldi	r27, 0x01	; 1
  9e:	ee e4       	ldi	r30, 0x4E	; 78
  a0:	f3 e0       	ldi	r31, 0x03	; 3
  a2:	00 e0       	ldi	r16, 0x00	; 0
  a4:	0b bf       	out	0x3b, r16	; 59
  a6:	02 c0       	rjmp	.+4      	; 0xac <__do_copy_data+0x14>
  a8:	07 90       	elpm	r0, Z+
  aa:	0d 92       	st	X+, r0
  ac:	a8 32       	cpi	r26, 0x28	; 40
  ae:	b1 07       	cpc	r27, r17
  b0:	d9 f7       	brne	.-10     	; 0xa8 <__do_copy_data+0x10>

000000b2 <__do_clear_bss>:
  b2:	21 e0       	ldi	r18, 0x01	; 1
  b4:	a8 e2       	ldi	r26, 0x28	; 40
  b6:	b1 e0       	ldi	r27, 0x01	; 1
  b8:	01 c0       	rjmp	.+2      	; 0xbc <.do_clear_bss_start>

000000ba <.do_clear_bss_loop>:
  ba:	1d 92       	st	X+, r1

000000bc <.do_clear_bss_start>:
  bc:	a9 32       	cpi	r26, 0x29	; 41
  be:	b2 07       	cpc	r27, r18
  c0:	e1 f7       	brne	.-8      	; 0xba <.do_clear_bss_loop>
  c2:	f5 d0       	rcall	.+490    	; 0x2ae <main>
  c4:	42 c1       	rjmp	.+644    	; 0x34a <_exit>

000000c6 <__bad_interrupt>:
  c6:	9c cf       	rjmp	.-200    	; 0x0 <__vectors>

000000c8 <_write_nibble>:
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
  c8:	80 fd       	sbrc	r24, 0
  ca:	04 c0       	rjmp	.+8      	; 0xd4 <_write_nibble+0xc>
  cc:	9b b1       	in	r25, 0x0b	; 11
  ce:	9f 7e       	andi	r25, 0xEF	; 239
  d0:	9b b9       	out	0x0b, r25	; 11
  d2:	03 c0       	rjmp	.+6      	; 0xda <_write_nibble+0x12>
  d4:	9b b1       	in	r25, 0x0b	; 11
  d6:	90 61       	ori	r25, 0x10	; 16
  d8:	9b b9       	out	0x0b, r25	; 11
  da:	81 fd       	sbrc	r24, 1
  dc:	04 c0       	rjmp	.+8      	; 0xe6 <_write_nibble+0x1e>
  de:	9b b1       	in	r25, 0x0b	; 11
  e0:	9f 7d       	andi	r25, 0xDF	; 223
  e2:	9b b9       	out	0x0b, r25	; 11
  e4:	03 c0       	rjmp	.+6      	; 0xec <_write_nibble+0x24>
  e6:	9b b1       	in	r25, 0x0b	; 11
  e8:	90 62       	ori	r25, 0x20	; 32
  ea:	9b b9       	out	0x0b, r25	; 11
  ec:	82 fd       	sbrc	r24, 2
  ee:	04 c0       	rjmp	.+8      	; 0xf8 <_write_nibble+0x30>
  f0:	9b b1       	in	r25, 0x0b	; 11
  f2:	9f 7b       	andi	r25, 0xBF	; 191
  f4:	9b b9       	out	0x0b, r25	; 11
  f6:	03 c0       	rjmp	.+6      	; 0xfe <_write_nibble+0x36>
  f8:	9b b1       	in	r25, 0x0b	; 11
  fa:	90 64       	ori	r25, 0x40	; 64
  fc:	9b b9       	out	0x0b, r25	; 11
  fe:	83 fd       	sbrc	r24, 3
 100:	04 c0       	rjmp	.+8      	; 0x10a <_write_nibble+0x42>
 102:	8b b1       	in	r24, 0x0b	; 11
 104:	8f 77       	andi	r24, 0x7F	; 127
 106:	8b b9       	out	0x0b, r24	; 11
 108:	03 c0       	rjmp	.+6      	; 0x110 <_write_nibble+0x48>
 10a:	8b b1       	in	r24, 0x0b	; 11
 10c:	80 68       	ori	r24, 0x80	; 128
 10e:	8b b9       	out	0x0b, r24	; 11
 110:	8b b1       	in	r24, 0x0b	; 11
 112:	8d 7f       	andi	r24, 0xFD	; 253
 114:	8b b9       	out	0x0b, r24	; 11
 116:	8b b1       	in	r24, 0x0b	; 11
 118:	82 60       	ori	r24, 0x02	; 2
 11a:	8b b9       	out	0x0b, r24	; 11
 11c:	8b b1       	in	r24, 0x0b	; 11
 11e:	8d 7f       	andi	r24, 0xFD	; 253
 120:	8b b9       	out	0x0b, r24	; 11
 122:	8b ed       	ldi	r24, 0xDB	; 219
 124:	95 e0       	ldi	r25, 0x05	; 5
 126:	01 97       	sbiw	r24, 0x01	; 1
 128:	f1 f7       	brne	.-4      	; 0x126 <_write_nibble+0x5e>
 12a:	00 c0       	rjmp	.+0      	; 0x12c <_write_nibble+0x64>
 12c:	00 00       	nop
 12e:	08 95       	ret

00000130 <_send_byte>:
 130:	cf 93       	push	r28
 132:	c8 2f       	mov	r28, r24
 134:	66 23       	and	r22, r22
 136:	19 f0       	breq	.+6      	; 0x13e <_send_byte+0xe>
 138:	61 30       	cpi	r22, 0x01	; 1
 13a:	29 f0       	breq	.+10     	; 0x146 <_send_byte+0x16>
 13c:	07 c0       	rjmp	.+14     	; 0x14c <_send_byte+0x1c>
 13e:	8b b1       	in	r24, 0x0b	; 11
 140:	8b 7f       	andi	r24, 0xFB	; 251
 142:	8b b9       	out	0x0b, r24	; 11
 144:	03 c0       	rjmp	.+6      	; 0x14c <_send_byte+0x1c>
 146:	8b b1       	in	r24, 0x0b	; 11
 148:	84 60       	ori	r24, 0x04	; 4
 14a:	8b b9       	out	0x0b, r24	; 11
 14c:	8c 2f       	mov	r24, r28
 14e:	82 95       	swap	r24
 150:	8f 70       	andi	r24, 0x0F	; 15
 152:	ba df       	rcall	.-140    	; 0xc8 <_write_nibble>
 154:	8c 2f       	mov	r24, r28
 156:	8f 70       	andi	r24, 0x0F	; 15
 158:	b7 df       	rcall	.-146    	; 0xc8 <_write_nibble>
 15a:	cf 91       	pop	r28
 15c:	08 95       	ret

0000015e <lcd_write>:
 15e:	61 e0       	ldi	r22, 0x01	; 1
 160:	e7 cf       	rjmp	.-50     	; 0x130 <_send_byte>
 162:	08 95       	ret

00000164 <lcd_command>:
 164:	60 e0       	ldi	r22, 0x00	; 0
 166:	e4 cf       	rjmp	.-56     	; 0x130 <_send_byte>
 168:	08 95       	ret

0000016a <lcd_init>:
 16a:	8a b1       	in	r24, 0x0a	; 10
 16c:	86 6f       	ori	r24, 0xF6	; 246
 16e:	8a b9       	out	0x0a, r24	; 10
 170:	8b b1       	in	r24, 0x0b	; 11
 172:	89 70       	andi	r24, 0x09	; 9
 174:	8b b9       	out	0x0b, r24	; 11
 176:	2f e5       	ldi	r18, 0x5F	; 95
 178:	8a ee       	ldi	r24, 0xEA	; 234
 17a:	90 e0       	ldi	r25, 0x00	; 0
 17c:	21 50       	subi	r18, 0x01	; 1
 17e:	80 40       	sbci	r24, 0x00	; 0
 180:	90 40       	sbci	r25, 0x00	; 0
 182:	e1 f7       	brne	.-8      	; 0x17c <lcd_init+0x12>
 184:	00 c0       	rjmp	.+0      	; 0x186 <lcd_init+0x1c>
 186:	00 00       	nop
 188:	83 e0       	ldi	r24, 0x03	; 3
 18a:	9e df       	rcall	.-196    	; 0xc8 <_write_nibble>
 18c:	83 e1       	ldi	r24, 0x13	; 19
 18e:	90 e5       	ldi	r25, 0x50	; 80
 190:	01 97       	sbiw	r24, 0x01	; 1
 192:	f1 f7       	brne	.-4      	; 0x190 <lcd_init+0x26>
 194:	00 c0       	rjmp	.+0      	; 0x196 <lcd_init+0x2c>
 196:	00 00       	nop
 198:	83 e0       	ldi	r24, 0x03	; 3
 19a:	96 df       	rcall	.-212    	; 0xc8 <_write_nibble>
 19c:	83 ef       	ldi	r24, 0xF3	; 243
 19e:	91 e0       	ldi	r25, 0x01	; 1
 1a0:	01 97       	sbiw	r24, 0x01	; 1
 1a2:	f1 f7       	brne	.-4      	; 0x1a0 <lcd_init+0x36>
 1a4:	00 c0       	rjmp	.+0      	; 0x1a6 <lcd_init+0x3c>
 1a6:	00 00       	nop
 1a8:	83 e0       	ldi	r24, 0x03	; 3
 1aa:	8e df       	rcall	.-228    	; 0xc8 <_write_nibble>
 1ac:	82 e0       	ldi	r24, 0x02	; 2
 1ae:	8c df       	rcall	.-232    	; 0xc8 <_write_nibble>
 1b0:	88 e2       	ldi	r24, 0x28	; 40
 1b2:	d8 df       	rcall	.-80     	; 0x164 <lcd_command>
 1b4:	96 ef       	ldi	r25, 0xF6	; 246
 1b6:	9a 95       	dec	r25
 1b8:	f1 f7       	brne	.-4      	; 0x1b6 <lcd_init+0x4c>
 1ba:	00 c0       	rjmp	.+0      	; 0x1bc <lcd_init+0x52>
 1bc:	87 e0       	ldi	r24, 0x07	; 7
 1be:	80 93 28 01 	sts	0x0128, r24	; 0x800128 <__data_end>
 1c2:	8f e0       	ldi	r24, 0x0F	; 15
 1c4:	cf df       	rcall	.-98     	; 0x164 <lcd_command>
 1c6:	26 ef       	ldi	r18, 0xF6	; 246
 1c8:	2a 95       	dec	r18
 1ca:	f1 f7       	brne	.-4      	; 0x1c8 <lcd_init+0x5e>
 1cc:	00 c0       	rjmp	.+0      	; 0x1ce <lcd_init+0x64>
 1ce:	81 e0       	ldi	r24, 0x01	; 1
 1d0:	c9 df       	rcall	.-110    	; 0x164 <lcd_command>
 1d2:	8f e0       	ldi	r24, 0x0F	; 15
 1d4:	97 e2       	ldi	r25, 0x27	; 39
 1d6:	01 97       	sbiw	r24, 0x01	; 1
 1d8:	f1 f7       	brne	.-4      	; 0x1d6 <lcd_init+0x6c>
 1da:	00 c0       	rjmp	.+0      	; 0x1dc <lcd_init+0x72>
 1dc:	00 00       	nop
 1de:	08 95       	ret

000001e0 <lcd_puts>:
 1e0:	cf 93       	push	r28
 1e2:	df 93       	push	r29
 1e4:	ec 01       	movw	r28, r24
 1e6:	02 c0       	rjmp	.+4      	; 0x1ec <lcd_puts+0xc>
 1e8:	ba df       	rcall	.-140    	; 0x15e <lcd_write>
 1ea:	21 96       	adiw	r28, 0x01	; 1
 1ec:	88 81       	ld	r24, Y
 1ee:	81 11       	cpse	r24, r1
 1f0:	fb cf       	rjmp	.-10     	; 0x1e8 <lcd_puts+0x8>
 1f2:	df 91       	pop	r29
 1f4:	cf 91       	pop	r28
 1f6:	08 95       	ret

000001f8 <lcd_set_cursor>:
 1f8:	e8 2f       	mov	r30, r24
 1fa:	f0 e0       	ldi	r31, 0x00	; 0
 1fc:	e1 5f       	subi	r30, 0xF1	; 241
 1fe:	fe 4f       	sbci	r31, 0xFE	; 254
 200:	80 81       	ld	r24, Z
 202:	86 0f       	add	r24, r22
 204:	81 50       	subi	r24, 0x01	; 1
 206:	80 68       	ori	r24, 0x80	; 128
 208:	ad cf       	rjmp	.-166    	; 0x164 <lcd_command>
 20a:	08 95       	ret

0000020c <lcd_clear>:
 20c:	81 e0       	ldi	r24, 0x01	; 1
 20e:	aa df       	rcall	.-172    	; 0x164 <lcd_command>
 210:	8f e0       	ldi	r24, 0x0F	; 15
 212:	97 e2       	ldi	r25, 0x27	; 39
 214:	01 97       	sbiw	r24, 0x01	; 1
 216:	f1 f7       	brne	.-4      	; 0x214 <lcd_clear+0x8>
 218:	00 c0       	rjmp	.+0      	; 0x21a <lcd_clear+0xe>
 21a:	00 00       	nop
 21c:	08 95       	ret

0000021e <lcd_disable_blink>:
 21e:	80 91 28 01 	lds	r24, 0x0128	; 0x800128 <__data_end>
 222:	8e 7f       	andi	r24, 0xFE	; 254
 224:	80 93 28 01 	sts	0x0128, r24	; 0x800128 <__data_end>
 228:	88 60       	ori	r24, 0x08	; 8
 22a:	9c df       	rcall	.-200    	; 0x164 <lcd_command>
 22c:	86 ef       	ldi	r24, 0xF6	; 246
 22e:	8a 95       	dec	r24
 230:	f1 f7       	brne	.-4      	; 0x22e <lcd_disable_blink+0x10>
 232:	00 c0       	rjmp	.+0      	; 0x234 <lcd_disable_blink+0x16>
 234:	08 95       	ret

00000236 <lcd_disable_cursor>:
	_lcd_params |= _LCD_CURSOR_ON;
	lcd_command(_LCD_DISPLAYCONTROL |_lcd_params);
	_delay_us(37);
}
void lcd_disable_cursor(void){
	_lcd_params &= ~_LCD_CURSOR_ON;
 236:	80 91 28 01 	lds	r24, 0x0128	; 0x800128 <__data_end>
 23a:	8d 7f       	andi	r24, 0xFD	; 253
 23c:	80 93 28 01 	sts	0x0128, r24	; 0x800128 <__data_end>
	lcd_command(_LCD_DISPLAYCONTROL |_lcd_params);
 240:	88 60       	ori	r24, 0x08	; 8
 242:	90 df       	rcall	.-224    	; 0x164 <lcd_command>
 244:	86 ef       	ldi	r24, 0xF6	; 246
 246:	8a 95       	dec	r24
 248:	f1 f7       	brne	.-4      	; 0x246 <lcd_disable_cursor+0x10>
 24a:	00 c0       	rjmp	.+0      	; 0x24c <lcd_disable_cursor+0x16>
 24c:	08 95       	ret

0000024e <lcd_scroll_left>:
	_delay_us(37);
}

void lcd_scroll_left(void){
	 lcd_command(_LCD_CURSORDISPLAYSHIFT | _LCD_DISPLAY_SHIFT | _LCD_MOVELEFT);
 24e:	88 e1       	ldi	r24, 0x18	; 24
 250:	89 df       	rcall	.-238    	; 0x164 <lcd_command>
 252:	86 ef       	ldi	r24, 0xF6	; 246
 254:	8a 95       	dec	r24
 256:	f1 f7       	brne	.-4      	; 0x254 <lcd_scroll_left+0x6>
 258:	00 c0       	rjmp	.+0      	; 0x25a <lcd_scroll_left+0xc>
 25a:	08 95       	ret

0000025c <lcd_scroll_right>:
	 _delay_us(37);
}
void lcd_scroll_right(void){
	 lcd_command(_LCD_CURSORDISPLAYSHIFT | _LCD_DISPLAY_SHIFT | _LCD_MOVERIGHT);
 25c:	8c e1       	ldi	r24, 0x1C	; 28
 25e:	82 df       	rcall	.-252    	; 0x164 <lcd_command>
 260:	86 ef       	ldi	r24, 0xF6	; 246
 262:	8a 95       	dec	r24
 264:	f1 f7       	brne	.-4      	; 0x262 <lcd_scroll_right+0x6>
 266:	00 c0       	rjmp	.+0      	; 0x268 <lcd_scroll_right+0xc>
 268:	08 95       	ret

0000026a <lcd_custom_char>:
	 _delay_us(37);
}

void lcd_custom_char(uint8_t mem, uint8_t *charmap){
 26a:	0f 93       	push	r16
 26c:	1f 93       	push	r17
 26e:	cf 93       	push	r28
 270:	8b 01       	movw	r16, r22
	lcd_command(_LCD_SET_CGRAM_ADDR |  ((mem&0x07)<<3) );
 272:	87 70       	andi	r24, 0x07	; 7
 274:	90 e0       	ldi	r25, 0x00	; 0
 276:	88 0f       	add	r24, r24
 278:	99 1f       	adc	r25, r25
 27a:	88 0f       	add	r24, r24
 27c:	99 1f       	adc	r25, r25
 27e:	88 0f       	add	r24, r24
 280:	99 1f       	adc	r25, r25
 282:	80 64       	ori	r24, 0x40	; 64
 284:	6f df       	rcall	.-290    	; 0x164 <lcd_command>
	for(uint8_t i=0; i<=7; i++){
 286:	c0 e0       	ldi	r28, 0x00	; 0
 288:	06 c0       	rjmp	.+12     	; 0x296 <lcd_custom_char+0x2c>
		lcd_write(charmap[i]);
 28a:	f8 01       	movw	r30, r16
 28c:	ec 0f       	add	r30, r28
 28e:	f1 1d       	adc	r31, r1
 290:	80 81       	ld	r24, Z
 292:	65 df       	rcall	.-310    	; 0x15e <lcd_write>
	 _delay_us(37);
}

void lcd_custom_char(uint8_t mem, uint8_t *charmap){
	lcd_command(_LCD_SET_CGRAM_ADDR |  ((mem&0x07)<<3) );
	for(uint8_t i=0; i<=7; i++){
 294:	cf 5f       	subi	r28, 0xFF	; 255
 296:	c8 30       	cpi	r28, 0x08	; 8
		lcd_write(charmap[i]);
	}
	lcd_command(_LCD_SET_DDRAM_ADDR);
 298:	c0 f3       	brcs	.-16     	; 0x28a <lcd_custom_char+0x20>
 29a:	80 e8       	ldi	r24, 0x80	; 128
 29c:	63 df       	rcall	.-314    	; 0x164 <lcd_command>
 29e:	86 ef       	ldi	r24, 0xF6	; 246
 2a0:	8a 95       	dec	r24
 2a2:	f1 f7       	brne	.-4      	; 0x2a0 <lcd_custom_char+0x36>
 2a4:	00 c0       	rjmp	.+0      	; 0x2a6 <lcd_custom_char+0x3c>
	_delay_us(37);
 2a6:	cf 91       	pop	r28
 2a8:	1f 91       	pop	r17
 2aa:	0f 91       	pop	r16
 2ac:	08 95       	ret

000002ae <main>:
};


int main(void)
{
    lcd_init();
 2ae:	5d df       	rcall	.-326    	; 0x16a <lcd_init>
	lcd_disable_blink();
 2b0:	b6 df       	rcall	.-148    	; 0x21e <lcd_disable_blink>
	lcd_disable_cursor();
 2b2:	c1 df       	rcall	.-126    	; 0x236 <lcd_disable_cursor>
 2b4:	68 e0       	ldi	r22, 0x08	; 8
	
	lcd_custom_char(0, customChar0);
 2b6:	71 e0       	ldi	r23, 0x01	; 1
 2b8:	80 e0       	ldi	r24, 0x00	; 0
 2ba:	d7 df       	rcall	.-82     	; 0x26a <lcd_custom_char>
 2bc:	60 e0       	ldi	r22, 0x00	; 0
	lcd_custom_char(1, customChar1);
 2be:	71 e0       	ldi	r23, 0x01	; 1
 2c0:	81 e0       	ldi	r24, 0x01	; 1
 2c2:	d3 df       	rcall	.-90     	; 0x26a <lcd_custom_char>
 2c4:	84 e1       	ldi	r24, 0x14	; 20
	
	lcd_puts("Iniciando");
 2c6:	91 e0       	ldi	r25, 0x01	; 1
 2c8:	8b df       	rcall	.-234    	; 0x1e0 <lcd_puts>
 2ca:	c0 e0       	ldi	r28, 0x00	; 0
 2cc:	d0 e0       	ldi	r29, 0x00	; 0
	for(int i=0; i<=5; i++){
 2ce:	0c c0       	rjmp	.+24     	; 0x2e8 <main+0x3a>
 2d0:	2f e7       	ldi	r18, 0x7F	; 127
 2d2:	8f e4       	ldi	r24, 0x4F	; 79
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 2d4:	92 e1       	ldi	r25, 0x12	; 18
 2d6:	21 50       	subi	r18, 0x01	; 1
 2d8:	80 40       	sbci	r24, 0x00	; 0
 2da:	90 40       	sbci	r25, 0x00	; 0
 2dc:	e1 f7       	brne	.-8      	; 0x2d6 <main+0x28>
 2de:	00 c0       	rjmp	.+0      	; 0x2e0 <main+0x32>
 2e0:	00 00       	nop
 2e2:	8e e2       	ldi	r24, 0x2E	; 46
		_delay_ms(300);
		lcd_write('.');
 2e4:	3c df       	rcall	.-392    	; 0x15e <lcd_write>
 2e6:	21 96       	adiw	r28, 0x01	; 1
	
	lcd_custom_char(0, customChar0);
	lcd_custom_char(1, customChar1);
	
	lcd_puts("Iniciando");
	for(int i=0; i<=5; i++){
 2e8:	c6 30       	cpi	r28, 0x06	; 6
 2ea:	d1 05       	cpc	r29, r1
		_delay_ms(300);
		lcd_write('.');
		
	}
	lcd_clear();
 2ec:	8c f3       	brlt	.-30     	; 0x2d0 <main+0x22>
	
	
    while (1) 
    {
		
		lcd_set_cursor(3,5);
 2ee:	8e df       	rcall	.-228    	; 0x20c <lcd_clear>
 2f0:	65 e0       	ldi	r22, 0x05	; 5
 2f2:	83 e0       	ldi	r24, 0x03	; 3
		lcd_write(0);
 2f4:	81 df       	rcall	.-254    	; 0x1f8 <lcd_set_cursor>
 2f6:	80 e0       	ldi	r24, 0x00	; 0
 2f8:	32 df       	rcall	.-412    	; 0x15e <lcd_write>
		lcd_puts(" iSebas ");
 2fa:	8e e1       	ldi	r24, 0x1E	; 30
 2fc:	91 e0       	ldi	r25, 0x01	; 1
 2fe:	70 df       	rcall	.-288    	; 0x1e0 <lcd_puts>
 300:	81 e0       	ldi	r24, 0x01	; 1
		lcd_write(1);
 302:	2d df       	rcall	.-422    	; 0x15e <lcd_write>
 304:	c0 e0       	ldi	r28, 0x00	; 0
 306:	d0 e0       	ldi	r29, 0x00	; 0
		
		for(int i=0; i<=4; i++){
 308:	0b c0       	rjmp	.+22     	; 0x320 <main+0x72>
 30a:	2f e7       	ldi	r18, 0x7F	; 127
 30c:	8f e4       	ldi	r24, 0x4F	; 79
 30e:	92 e1       	ldi	r25, 0x12	; 18
 310:	21 50       	subi	r18, 0x01	; 1
 312:	80 40       	sbci	r24, 0x00	; 0
 314:	90 40       	sbci	r25, 0x00	; 0
 316:	e1 f7       	brne	.-8      	; 0x310 <main+0x62>
 318:	00 c0       	rjmp	.+0      	; 0x31a <main+0x6c>
 31a:	00 00       	nop
 31c:	9f df       	rcall	.-194    	; 0x25c <lcd_scroll_right>
			_delay_ms(300);
			lcd_scroll_right();
 31e:	21 96       	adiw	r28, 0x01	; 1
 320:	c5 30       	cpi	r28, 0x05	; 5
		lcd_set_cursor(3,5);
		lcd_write(0);
		lcd_puts(" iSebas ");
		lcd_write(1);
		
		for(int i=0; i<=4; i++){
 322:	d1 05       	cpc	r29, r1
 324:	94 f3       	brlt	.-28     	; 0x30a <main+0x5c>
 326:	c0 e0       	ldi	r28, 0x00	; 0
 328:	d0 e0       	ldi	r29, 0x00	; 0
 32a:	0b c0       	rjmp	.+22     	; 0x342 <main+0x94>
 32c:	2f e7       	ldi	r18, 0x7F	; 127
 32e:	8f e4       	ldi	r24, 0x4F	; 79
 330:	92 e1       	ldi	r25, 0x12	; 18
 332:	21 50       	subi	r18, 0x01	; 1
 334:	80 40       	sbci	r24, 0x00	; 0
 336:	90 40       	sbci	r25, 0x00	; 0
 338:	e1 f7       	brne	.-8      	; 0x332 <main+0x84>
 33a:	00 c0       	rjmp	.+0      	; 0x33c <main+0x8e>
 33c:	00 00       	nop
 33e:	87 df       	rcall	.-242    	; 0x24e <lcd_scroll_left>
			_delay_ms(300);
			lcd_scroll_right();
		}
		for(int i=0; i<=4; i++){
			_delay_ms(300);
			lcd_scroll_left();
 340:	21 96       	adiw	r28, 0x01	; 1
 342:	c5 30       	cpi	r28, 0x05	; 5
		
		for(int i=0; i<=4; i++){
			_delay_ms(300);
			lcd_scroll_right();
		}
		for(int i=0; i<=4; i++){
 344:	d1 05       	cpc	r29, r1
 346:	94 f3       	brlt	.-28     	; 0x32c <main+0x7e>
 348:	d3 cf       	rjmp	.-90     	; 0x2f0 <main+0x42>

0000034a <_exit>:
 34a:	f8 94       	cli

0000034c <__stop_program>:
 34c:	ff cf       	rjmp	.-2      	; 0x34c <__stop_program>
